JAVA PROFILE 1.0.1, created Sun Nov  3 15:06:58 2013

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000016f, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=5000016f, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=5000016f, id = 200003, name="DestroyJavaVM", group="main")
THREAD END (id = 200003)
TRACE 304023:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 303992:
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304022:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304221:
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304029:
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304062:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304028:
	java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304104:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304279:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303987:
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304070:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304278:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304283:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304031:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304071:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304033:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
TRACE 304061:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304134:
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304034:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
TRACE 304166:
	java.lang.Integer.compare(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304220:
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304228:
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
TRACE 304282:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304136:
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304109:
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304247:
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
TRACE 304277:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304280:
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304390:
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303986:
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304065:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304066:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304135:
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304284:
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304101:
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304244:
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304020:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
TRACE 304072:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304121:
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304222:
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 304225:
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304026:
	java.lang.CharacterData.of(CharacterData.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304045:
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304111:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304281:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 300995:
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
TRACE 303982:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 303983:
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304037:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 304110:
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304123:
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 302572:
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
TRACE 303506:
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
TRACE 304027:
	java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:Unknown line)
	java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
TRACE 304053:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304103:
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304130:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304245:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304248:
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304288:
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 300957:
	java.lang.CharacterDataLatin1.digit(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
TRACE 303985:
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304018:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304019:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304021:
	java.nio.HeapCharBuffer.ix(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
TRACE 304060:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304082:
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304088:
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304096:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304116:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304148:
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304188:
	BinaryHeapPriorityQueue.top(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304315:
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304054:
	java.nio.HeapCharBuffer.ix(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304063:
	java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304064:
	java.util.regex.Pattern$Node.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304099:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 304125:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304133:
	java.lang.String.charAt(String.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304169:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304205:
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 304293:
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304305:
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304309:
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303505:
	java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:Unknown line)
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
TRACE 304024:
	java.lang.Character.isHighSurrogate(Character.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304058:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304059:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304068:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304077:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
TRACE 304081:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304112:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304167:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304187:
	BinaryHeapPriorityQueue.empty(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.top(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304204:
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304211:
	java.nio.CharBuffer.arrayOffset(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304218:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
TRACE 304229:
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304242:
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
TRACE 304260:
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304298:
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304302:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304303:
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 300956:
	java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:Unknown line)
	java.lang.CharacterDataLatin1.digit(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
TRACE 303968:
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.Scanner$1.create(Scanner.java:Unknown line)
TRACE 303984:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
TRACE 303988:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
TRACE 304032:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304039:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304040:
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 304041:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304044:
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
TRACE 304074:
	java.util.regex.Pattern$LastNode.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304076:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304078:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304089:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304092:
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304093:
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304097:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304098:
	java.nio.Buffer.capacity(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304100:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 304102:
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304106:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304159:
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304162:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304203:
	sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
TRACE 304290:
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304299:
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304308:
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304314:
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 300561:
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
TRACE 300955:
	java.lang.CharacterData.of(CharacterData.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
TRACE 300994:
	java.lang.Math.min(Math.java:Unknown line)
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
TRACE 303753:
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
	java.text.NumberFormat.getNumberInstance(NumberFormat.java:Unknown line)
	java.util.Scanner.useLocale(Scanner.java:Unknown line)
	java.util.Scanner.<init>(Scanner.java:Unknown line)
TRACE 303975:
	java.util.Scanner.integerPattern(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303979:
	java.util.regex.Matcher.usePattern(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304038:
	java.lang.Character.isHighSurrogate(Character.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 304042:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304047:
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304056:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304067:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304069:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304073:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304075:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304079:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304083:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304085:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304105:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304107:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304126:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304152:
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304156:
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304157:
	BinaryHeapPriorityQueue.ensureNotNull(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304199:
	java.lang.String.getChars(String.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304206:
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304207:
	java.nio.Buffer.hasRemaining(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304210:
	java.nio.CharBuffer.array(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304233:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
TRACE 304235:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304237:
	java.nio.ByteBuffer.array(ByteBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304243:
	java.io.OutputStream.flush(OutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
TRACE 304256:
	java.lang.String.length(String.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304259:
	java.lang.String.getChars(String.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
TRACE 304287:
	java.lang.String.<init>(String.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 304297:
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304311:
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304313:
	java.io.OutputStream.flush(OutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304316:
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 300128:
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
TRACE 300241:
	java.net.URLStreamHandler.toExternalForm(URLStreamHandler.java:Unknown line)
	java.net.URL.toExternalForm(URL.java:Unknown line)
	java.net.URL.toString(URL.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 300287:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300358:
	java.io.File.exists(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.access$600(URLClassPath.java:Unknown line)
TRACE 300368:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300427:
	java.lang.Class.forName(Class.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:Unknown line)
	java.nio.charset.Charset.lookup2(Charset.java:Unknown line)
TRACE 301772:
	java.util.regex.Pattern.isSupplementary(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301774:
	java.util.regex.Pattern.RemoveQEQuoting(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 302052:
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
TRACE 302129:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
TRACE 302471:
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
	java.io.File.isDirectory(File.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
TRACE 302570:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 302571:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 303507:
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
TRACE 303824:
	java.util.regex.Pattern.bitsOrSingle(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 303977:
	java.util.Scanner.saveState(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 303980:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 303989:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304025:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304055:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304084:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304086:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304095:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304108:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304114:
	java.util.regex.Matcher.groupCount(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304115:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304117:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304122:
	java.util.Scanner.revertState(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304124:
	java.util.regex.Matcher.groupCount(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304129:
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304147:
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304155:
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304164:
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
TRACE 304168:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304189:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304197:
	java.io.BufferedWriter.ensureOpen(BufferedWriter.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304208:
	java.nio.CharBuffer.hasArray(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304209:
	java.nio.ByteBuffer.hasArray(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304213:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304215:
	java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304216:
	java.lang.Math.min(Math.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304217:
	java.nio.CharBuffer.arrayOffset(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
TRACE 304227:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304239:
	java.io.PrintStream.ensureOpen(PrintStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304246:
	java.nio.Buffer.clear(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304264:
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304267:
	sun.nio.cs.StreamEncoder.isOpen(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304268:
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304286:
	java.lang.Integer.getChars(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 304289:
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304306:
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304312:
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 300025:
	java.lang.String.equals(String.java:Unknown line)
	java.util.Hashtable.get(Hashtable.java:Unknown line)
	java.util.Properties.getProperty(Properties.java:Unknown line)
	java.lang.System.getProperty(System.java:Unknown line)
TRACE 300067:
	java.lang.StringCoding.access$000(StringCoding.java:Unknown line)
	java.lang.StringCoding$StringDecoder.decode(StringCoding.java:Unknown line)
	java.lang.StringCoding.decode(StringCoding.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
TRACE 300093:
	java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:Unknown line)
	java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:Unknown line)
	java.util.concurrent.locks.ReentrantLock.tryLock(ReentrantLock.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap$Segment.put(ConcurrentHashMap.java:Unknown line)
TRACE 300096:
	java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:Unknown line)
	java.util.concurrent.locks.ReentrantLock.tryLock(ReentrantLock.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap$Segment.put(ConcurrentHashMap.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:Unknown line)
TRACE 300105:
	java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:Unknown line)
	java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:Unknown line)
	java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap$Segment.put(ConcurrentHashMap.java:Unknown line)
TRACE 300112:
	java.lang.String.indexOf(String.java:Unknown line)
	java.lang.String.indexOf(String.java:Unknown line)
	java.lang.ClassLoader.checkName(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:Unknown line)
TRACE 300119:
	java.lang.ClassLoader.getClassLoadingLock(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
TRACE 300141:
	java.lang.String.concat(String.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:Unknown line)
TRACE 300161:
	java.lang.Character.toLowerCase(Character.java:Unknown line)
	java.lang.Character.toLowerCase(Character.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
TRACE 300162:
	java.lang.Character.toLowerCase(Character.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
	sun.net.util.URLUtil.urlNoFragString(URLUtil.java:Unknown line)
TRACE 300175:
	java.lang.Math.min(Math.java:Unknown line)
	java.util.Arrays.copyOf(Arrays.java:Unknown line)
	java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:Unknown line)
TRACE 300187:
	java.util.HashMap.containsKey(HashMap.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 300207:
	sun.misc.SharedSecrets.getJavaUtilZipFileAccess(SharedSecrets.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<clinit>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300250:
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300254:
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300261:
	java.lang.Character.toLowerCase(Character.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
	java.lang.String.toLowerCase(String.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 300271:
	java.net.Parts.<init>(URL.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300286:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300321:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300331:
	java.lang.ref.SoftReference.get(SoftReference.java:Unknown line)
	java.lang.StringCoding.deref(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
TRACE 300343:
	java.lang.StringCoding.access$300(StringCoding.java:Unknown line)
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
TRACE 300348:
	java.lang.String.lastIndexOf(String.java:Unknown line)
	java.lang.String.lastIndexOf(String.java:Unknown line)
	java.io.File.getName(File.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
TRACE 300352:
	java.lang.String.<init>(String.java:Unknown line)
	java.lang.String.substring(String.java:Unknown line)
	java.io.File.getName(File.java:Unknown line)
	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
TRACE 300372:
	java.io.File.<init>(File.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.access$600(URLClassPath.java:Unknown line)
TRACE 300384:
	sun.nio.cs.FastCharsetProvider.toLower(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:Unknown line)
	java.nio.charset.Charset.lookup2(Charset.java:Unknown line)
TRACE 300405:
	sun.util.PreHashedMap.put(PreHashedMap.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:Unknown line)
	java.nio.charset.Charset.lookup2(Charset.java:Unknown line)
TRACE 300486:
	java.nio.charset.Charset.atBugLevel(Charset.java:Unknown line)
	java.nio.charset.Charset.checkName(Charset.java:Unknown line)
	java.nio.charset.Charset.<init>(Charset.java:Unknown line)
	sun.nio.cs.ISO_8859_1.<init>(ISO_8859_1.java:Unknown line)
TRACE 300559:
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
TRACE 300567:
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.access$600(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
TRACE 300598:
	java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:Unknown line)
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getEntry(JarFile.java:Unknown line)
TRACE 300616:
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader$1.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.ensureOpen(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300618:
	sun.misc.URLClassPath$JarLoader.ensureOpen(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300619:
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300626:
	sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getClassPath(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
TRACE 300653:
	java.util.Vector.size(Vector.java:Unknown line)
	java.lang.ClassLoader.findNative(ClassLoader.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
TRACE 300708:
	java.util.zip.ZipFile.getInflater(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getBytes(JarFile.java:Unknown line)
	java.util.jar.JarFile.hasClassPathAttribute(JarFile.java:Unknown line)
TRACE 300763:
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:Unknown line)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:Unknown line)
	sun.misc.IOUtils.readFully(IOUtils.java:Unknown line)
TRACE 300782:
	java.util.zip.Inflater.ensureOpen(Inflater.java:Unknown line)
	java.util.zip.Inflater.reset(Inflater.java:Unknown line)
	java.util.zip.ZipFile.releaseInflater(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$100(ZipFile.java:Unknown line)
TRACE 300793:
	java.util.zip.ZipFile$ZipFileInflaterInputStream.close(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getBytes(JarFile.java:Unknown line)
	java.util.jar.JarFile.hasClassPathAttribute(JarFile.java:Unknown line)
	java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute(JavaUtilJarAccessImpl.java:Unknown line)
TRACE 300796:
	java.util.jar.JarFile.hasClassPathAttribute(JarFile.java:Unknown line)
	java.util.jar.JavaUtilJarAccessImpl.jarFileHasClassPathAttribute(JavaUtilJarAccessImpl.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getClassPath(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300811:
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 300896:
	sun.nio.cs.ThreadLocalCoders.<clinit>(ThreadLocalCoders.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300982:
	sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Decoder.decodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetDecoder.decode(CharsetDecoder.java:Unknown line)
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
TRACE 301036:
	java.util.HashMap.hash(HashMap.java:Unknown line)
	java.util.HashMap.getEntry(HashMap.java:Unknown line)
	java.util.LinkedHashMap.get(LinkedHashMap.java:Unknown line)
	java.io.ExpiringCache.entryFor(ExpiringCache.java:Unknown line)
TRACE 301051:
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
	java.io.UnixFileSystem.canonicalize(UnixFileSystem.java:Unknown line)
TRACE 301113:
	java.lang.String.substring(String.java:Unknown line)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 301128:
	java.lang.String.endsWith(String.java:Unknown line)
	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 301167:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:Unknown line)
TRACE 301199:
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 301220:
	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
	java.lang.String.getBytes(String.java:Unknown line)
	java.io.FileInputStream.<init>(FileInputStream.java:Unknown line)
TRACE 301242:
	java.io.FileInputStream.read(FileInputStream.java:Unknown line)
	sun.misc.Resource.getBytes(Resource.java:Unknown line)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.access$100(URLClassLoader.java:Unknown line)
TRACE 301355:
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	java.net.URL.openConnection(URL.java:Unknown line)
TRACE 301379:
	sun.misc.Hashing.randomHashSeed(Hashing.java:Unknown line)
	java.util.HashMap.<init>(HashMap.java:Unknown line)
	java.util.HashMap.<init>(HashMap.java:Unknown line)
	sun.net.www.URLConnection.<clinit>(URLConnection.java:Unknown line)
TRACE 301394:
	sun.net.www.protocol.file.Handler.createFileURLConnection(Handler.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:Unknown line)
	java.net.URL.openConnection(URL.java:Unknown line)
TRACE 301445:
	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
	sun.net.www.protocol.file.FileURLConnection.getPermission(FileURLConnection.java:Unknown line)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:Unknown line)
TRACE 301546:
	java.util.ArrayList.add(ArrayList.java:Unknown line)
	java.io.FilePermissionCollection.add(FilePermission.java:Unknown line)
	java.security.Permissions.add(Permissions.java:Unknown line)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:Unknown line)
TRACE 301596:
	java.util.HashMap.hash(HashMap.java:Unknown line)
	java.util.HashMap.put(HashMap.java:Unknown line)
	java.security.SecureClassLoader.getProtectionDomain(SecureClassLoader.java:Unknown line)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:Unknown line)
TRACE 301656:
	java.lang.ClassLoader.defineClass(ClassLoader.java:Unknown line)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:Unknown line)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.access$100(URLClassLoader.java:Unknown line)
TRACE 301658:
	java.net.URLClassLoader.defineClass(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader.access$100(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 301768:
	java.lang.Character.isHighSurrogate(Character.java:Unknown line)
	java.lang.Character.codePointAtImpl(Character.java:Unknown line)
	java.lang.String.codePointAt(String.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301769:
	java.lang.Character.codePointAtImpl(Character.java:Unknown line)
	java.lang.String.codePointAt(String.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
TRACE 301770:
	java.lang.String.codePointAt(String.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301771:
	java.lang.Character.isSurrogate(Character.java:Unknown line)
	java.util.regex.Pattern.isSupplementary(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
TRACE 301809:
	java.util.HashMap.createEntry(HashMap.java:Unknown line)
	java.util.HashMap.addEntry(HashMap.java:Unknown line)
	java.util.HashMap.put(HashMap.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames.defCategory(Pattern.java:Unknown line)
TRACE 301812:
	java.util.regex.Pattern$CharPropertyNames.defCategory(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames.<clinit>(Pattern.java:Unknown line)
	java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:Unknown line)
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
TRACE 301814:
	java.util.HashMap.indexFor(HashMap.java:Unknown line)
	java.util.HashMap.transfer(HashMap.java:Unknown line)
	java.util.HashMap.resize(HashMap.java:Unknown line)
	java.util.HashMap.addEntry(HashMap.java:Unknown line)
TRACE 301872:
	java.util.HashMap.put(HashMap.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames.defClone(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames.<clinit>(Pattern.java:Unknown line)
	java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:Unknown line)
TRACE 301959:
	java.util.regex.Pattern$CharPropertyNames.<clinit>(Pattern.java:Unknown line)
	java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:Unknown line)
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 301970:
	java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:Unknown line)
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
TRACE 301981:
	java.util.regex.Pattern.has(Pattern.java:Unknown line)
	java.util.regex.Pattern.peek(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301998:
	java.util.regex.Pattern$Start.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 302033:
	java.util.regex.Pattern.peek(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 302043:
	java.lang.String.<init>(String.java:Unknown line)
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
TRACE 302051:
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 302062:
	java.util.regex.Pattern.has(Pattern.java:Unknown line)
	java.util.regex.Pattern.next(Pattern.java:Unknown line)
	java.util.regex.Pattern.single(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
TRACE 302093:
	java.util.Scanner.<clinit>(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 302153:
	sun.security.action.GetPropertyAction.run(GetPropertyAction.java:Unknown line)
	java.util.Locale.initDefault(Locale.java:Unknown line)
	java.util.Locale.getDefault(Locale.java:Unknown line)
	java.util.Scanner.<init>(Scanner.java:Unknown line)
TRACE 302199:
	java.lang.ref.Reference.get(Reference.java:Unknown line)
	java.lang.ref.SoftReference.get(SoftReference.java:Unknown line)
	sun.util.locale.LocaleObjectCache.get(LocaleObjectCache.java:Unknown line)
	java.util.Locale.getInstance(Locale.java:Unknown line)
TRACE 302336:
	sun.util.locale.UnicodeLocaleExtension.<init>(UnicodeLocaleExtension.java:Unknown line)
	sun.util.locale.UnicodeLocaleExtension.<clinit>(UnicodeLocaleExtension.java:Unknown line)
	sun.util.locale.LocaleExtensions.<clinit>(LocaleExtensions.java:Unknown line)
	java.util.Locale.getCompatibilityExtensions(Locale.java:Unknown line)
TRACE 302343:
	java.util.Locale.getCompatibilityExtensions(Locale.java:Unknown line)
	java.util.Locale.<init>(Locale.java:Unknown line)
	sun.util.LocaleServiceProviderPool.<clinit>(LocaleServiceProviderPool.java:Unknown line)
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
TRACE 302440:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.Launcher.getClassPath(Launcher.java:Unknown line)
TRACE 302476:
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.lang.String.substring(String.java:Unknown line)
	java.io.File.getParent(File.java:Unknown line)
TRACE 302491:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.MetaIndex.registerDirectory(MetaIndex.java:Unknown line)
TRACE 302609:
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.io.BufferedReader.readLine(BufferedReader.java:Unknown line)
	java.io.BufferedReader.readLine(BufferedReader.java:Unknown line)
TRACE 302612:
	java.io.BufferedReader.readLine(BufferedReader.java:Unknown line)
	sun.misc.MetaIndex.registerDirectory(MetaIndex.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
TRACE 302694:
	java.net.Parts.<init>(URL.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
	java.net.URL.<init>(URL.java:Unknown line)
TRACE 302714:
	java.lang.String.length(String.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	java.io.UnixFileSystem.canonicalize(UnixFileSystem.java:Unknown line)
TRACE 302715:
	java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	java.io.UnixFileSystem.canonicalize(UnixFileSystem.java:Unknown line)
TRACE 302763:
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
	sun.misc.Launcher$Factory.createURLStreamHandler(Launcher.java:Unknown line)
	sun.misc.URLClassPath.<init>(URLClassPath.java:Unknown line)
TRACE 302787:
	sun.misc.URLClassPath.getResources(URLClassPath.java:Unknown line)
	java.lang.ClassLoader.getBootstrapResources(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.getResources(ClassLoader.java:Unknown line)
	java.util.ServiceLoader$LazyIterator.hasNext(ServiceLoader.java:Unknown line)
TRACE 302790:
	java.lang.ClassLoader.getBootstrapResources(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.getResources(ClassLoader.java:Unknown line)
	java.util.ServiceLoader$LazyIterator.hasNext(ServiceLoader.java:Unknown line)
	java.util.ServiceLoader$1.hasNext(ServiceLoader.java:Unknown line)
TRACE 302812:
	java.net.URL.getPort(URL.java:Unknown line)
	sun.net.util.URLUtil.urlNoFragString(URLUtil.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.access$000(URLClassPath.java:Unknown line)
TRACE 302837:
	sun.misc.URLClassPath.access$000(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$2.next(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$2.hasMoreElements(URLClassPath.java:Unknown line)
	java.lang.ClassLoader$2.hasMoreElements(ClassLoader.java:Unknown line)
TRACE 302879:
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.access$000(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$1.next(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$1.hasMoreElements(URLClassPath.java:Unknown line)
TRACE 302883:
	java.util.jar.JarFile.getJarEntry(JarFile.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.findResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$1.next(URLClassPath.java:Unknown line)
TRACE 302898:
	sun.util.LocaleServiceProviderPool.<init>(LocaleServiceProviderPool.java:Unknown line)
	sun.util.LocaleServiceProviderPool.getPool(LocaleServiceProviderPool.java:Unknown line)
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
	java.text.NumberFormat.getNumberInstance(NumberFormat.java:Unknown line)
TRACE 302945:
	java.util.ResourceBundle$Control.<clinit>(ResourceBundle.java:Unknown line)
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
	sun.util.resources.LocaleData.getBundle(LocaleData.java:Unknown line)
TRACE 303021:
	java.util.ResourceBundle$RBClassLoader.<clinit>(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.getLoader(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.getBundle(ResourceBundle.java:Unknown line)
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
TRACE 303080:
	java.util.ResourceBundle$Control$CandidateListCache.getDefaultList(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle$Control$CandidateListCache.createObject(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle$Control$CandidateListCache.createObject(ResourceBundle.java:Unknown line)
	sun.util.locale.LocaleObjectCache.get(LocaleObjectCache.java:Unknown line)
TRACE 303274:
	java.util.ResourceBundle.putBundleInCache(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.findBundle(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.findBundle(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.findBundle(ResourceBundle.java:Unknown line)
TRACE 303285:
	sun.util.locale.BaseLocale.getScript(BaseLocale.java:Unknown line)
	java.util.Locale.getScript(Locale.java:Unknown line)
	java.util.ResourceBundle$Control.toBundleName(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle$Control.newBundle(ResourceBundle.java:Unknown line)
TRACE 303349:
	java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:Unknown line)
	java.util.ResourceBundle.getBundle(ResourceBundle.java:Unknown line)
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
TRACE 303461:
	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
	java.util.Currency.<clinit>(Currency.java:Unknown line)
TRACE 303474:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	java.io.FileInputStream.<init>(FileInputStream.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
TRACE 303508:
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
	java.util.Currency.<clinit>(Currency.java:Unknown line)
TRACE 303519:
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	java.io.DataInputStream.readUnsignedShort(DataInputStream.java:Unknown line)
	java.io.DataInputStream.readUTF(DataInputStream.java:Unknown line)
	java.io.DataInputStream.readUTF(DataInputStream.java:Unknown line)
TRACE 303557:
	java.util.Currency$1.run(Currency.java:Unknown line)
	java.util.Currency.<clinit>(Currency.java:Unknown line)
	java.text.DecimalFormatSymbols.initialize(DecimalFormatSymbols.java:Unknown line)
	java.text.DecimalFormatSymbols.<init>(DecimalFormatSymbols.java:Unknown line)
TRACE 303625:
	sun.util.resources.LocaleData$1.run(LocaleData.java:Unknown line)
	sun.util.resources.LocaleData.getBundle(LocaleData.java:Unknown line)
	sun.util.resources.LocaleData.getCurrencyNames(LocaleData.java:Unknown line)
	java.util.Currency.getSymbol(Currency.java:Unknown line)
TRACE 303667:
	java.text.DecimalFormatSymbols.initialize(DecimalFormatSymbols.java:Unknown line)
	java.text.DecimalFormatSymbols.<init>(DecimalFormatSymbols.java:Unknown line)
	java.text.DecimalFormatSymbols.getInstance(DecimalFormatSymbols.java:Unknown line)
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
TRACE 303747:
	java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
	java.lang.StringBuffer.append(StringBuffer.java:Unknown line)
	java.text.DecimalFormat.expandAffix(DecimalFormat.java:Unknown line)
TRACE 303752:
	java.text.DecimalFormat.<init>(DecimalFormat.java:Unknown line)
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
	java.text.NumberFormat.getNumberInstance(NumberFormat.java:Unknown line)
	java.util.Scanner.useLocale(Scanner.java:Unknown line)
TRACE 303787:
	java.util.Scanner.<init>(Scanner.java:Unknown line)
	java.util.Scanner.<init>(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303800:
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.lang.StringBuilder.toString(StringBuilder.java:Unknown line)
	java.util.Scanner.buildIntegerPatternString(Scanner.java:Unknown line)
TRACE 303817:
	java.util.regex.Pattern$GroupTail.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.createGroup(Pattern.java:Unknown line)
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 303821:
	java.util.regex.Pattern.has(Pattern.java:Unknown line)
	java.util.regex.Pattern.bitsOrSingle(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
TRACE 303823:
	java.util.regex.Pattern$BitClass.add(Pattern.java:Unknown line)
	java.util.regex.Pattern.bitsOrSingle(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
TRACE 303825:
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
TRACE 303830:
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
TRACE 303834:
	java.util.regex.ASCII.isUpper(ASCII.java:Unknown line)
	java.util.regex.ASCII.toLower(ASCII.java:Unknown line)
	java.util.regex.Pattern$BitClass.add(Pattern.java:Unknown line)
	java.util.regex.Pattern.bitsOrSingle(Pattern.java:Unknown line)
TRACE 303854:
	java.util.regex.Pattern.peek(Pattern.java:Unknown line)
	java.util.regex.Pattern.closure(Pattern.java:Unknown line)
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 303859:
	java.util.regex.Pattern.closure(Pattern.java:Unknown line)
	java.util.regex.Pattern.group0(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
	java.util.regex.Pattern.expr(Pattern.java:Unknown line)
TRACE 303981:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
TRACE 303990:
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 303991:
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304004:
	java.io.BufferedInputStream.read1(BufferedInputStream.java:Unknown line)
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:Unknown line)
TRACE 304007:
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.read(StreamDecoder.java:Unknown line)
	java.io.InputStreamReader.read(InputStreamReader.java:Unknown line)
	java.io.Reader.read(Reader.java:Unknown line)
TRACE 304030:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304035:
	java.lang.Character.charCount(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304046:
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304048:
	java.util.regex.Matcher.end(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304052:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304080:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304090:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
TRACE 304091:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304113:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304118:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304119:
	java.util.regex.Matcher.end(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304127:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304128:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304131:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304143:
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer$IntegerCache.<clinit>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304144:
	java.lang.Integer$IntegerCache.<clinit>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304145:
	java.lang.Number.<init>(Number.java:Unknown line)
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304149:
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304150:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304151:
	java.util.Scanner.useTypeCache(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304153:
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304161:
	java.util.regex.Pattern$Node.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304183:
	java.util.Scanner.makeSpace(Scanner.java:Unknown line)
	java.util.Scanner.readInput(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304212:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304214:
	java.nio.ByteBuffer.array(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304219:
	java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
TRACE 304226:
	java.nio.charset.CoderResult.isUnderflow(CoderResult.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304234:
	java.nio.Buffer.flip(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304236:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304238:
	java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304240:
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304241:
	java.io.FileOutputStream.write(FileOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304257:
	java.io.BufferedWriter.ensureOpen(BufferedWriter.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
TRACE 304291:
	java.io.PrintStream.ensureOpen(PrintStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304292:
	java.lang.String.length(String.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304294:
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304295:
	java.io.BufferedWriter.ensureOpen(BufferedWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304296:
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304301:
	java.lang.String.indexOf(String.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304310:
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304345:
	sun.misc.FloatingDecimal.dtoa(FloatingDecimal.java:Unknown line)
	sun.misc.FloatingDecimal.<init>(FloatingDecimal.java:Unknown line)
	java.lang.Double.toString(Double.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 304362:
	java.lang.Double.toString(Double.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304400:
	java.lang.Shutdown.sequence(Shutdown.java:Unknown line)
	java.lang.Shutdown.shutdown(Shutdown.java:Unknown line)
CPU TIME (ms) BEGIN (total = 1666) Sun Nov  3 15:06:59 2013
rank   self  accum   count trace method
   1  2.34%  2.34%    7899 304023 java.nio.CharBuffer.charAt
   2  1.98%  4.32%    1009 303992 java.util.Scanner.getCompleteTokenInBuffer
   3  1.98%  6.30%    9896 304022 java.nio.HeapCharBuffer.get
   4  1.98%  8.28%    2002 304221 sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
   5  1.68%  9.96%    7899 304029 java.lang.Character.isWhitespace
   6  1.62% 11.58%    5883 304062 java.nio.CharBuffer.charAt
   7  1.56% 13.15%    9896 304028 java.lang.CharacterDataLatin1.isWhitespace
   8  1.44% 14.59%    3000 304104 java.nio.HeapCharBuffer.subSequence
   9  1.32% 15.91%    7489 304279 BinaryHeapPriorityQueue.comp
  10  1.26% 17.17%    3009 303987 java.util.regex.Matcher.region
  11  1.26% 18.43%    5883 304070 java.util.regex.Pattern$BmpCharProperty.match
  12  1.20% 19.63%    7489 304278 java.lang.Integer.compareTo
  13  1.20% 20.83%    7501 304283 BinaryHeapPriorityQueue.comp
  14  1.14% 21.97%    6896 304031 java.lang.Character.codePointAt
  15  1.14% 23.11%    5883 304071 java.util.regex.Pattern$Branch.match
  16  1.08% 24.19%    6896 304033 java.util.regex.Pattern$CharProperty.match
  17  1.08% 25.27%    5883 304061 java.nio.HeapCharBuffer.get
  18  1.08% 26.35%    5883 304134 java.lang.Character.digit
  19  1.02% 27.37%    6896 304034 java.util.regex.Pattern$Curly.match
  20  1.02% 28.39%   17142 304166 java.lang.Integer.compare
  21  1.02% 29.41%    2002 304220 sun.nio.cs.UTF_8.updatePositions
  22  1.02% 30.43%    2002 304228 sun.nio.cs.StreamEncoder.implWrite
  23  1.02% 31.45%    7501 304282 java.lang.Integer.compareTo
  24  0.90% 32.35%    1000 304136 java.lang.Integer.parseInt
  25  0.84% 33.19%    3000 304109 java.lang.String.<init>
  26  0.84% 34.03%    2002 304247 sun.nio.cs.StreamEncoder.writeBytes
  27  0.84% 34.87%    7489 304277 java.lang.Integer.compareTo
  28  0.84% 35.71%    8358 304280 BinaryHeapPriorityQueue.largerChild
  29  0.84% 36.55%       1 304390 UniqueMod.main
  30  0.78% 37.33%    3009 303986 java.util.regex.Matcher.reset
  31  0.78% 38.12%    5883 304065 java.util.regex.Pattern$GroupTail.match
  32  0.78% 38.90%    5883 304066 java.util.regex.Pattern$BranchConn.match
  33  0.78% 39.68%    5883 304135 java.lang.Character.digit
  34  0.78% 40.46%    1000 304284 BinaryHeapPriorityQueue.remove
  35  0.72% 41.18%    3000 304101 java.nio.Buffer.<init>
  36  0.72% 41.90%    2002 304244 java.io.BufferedOutputStream.flush
  37  0.66% 42.56%    9896 304020 java.nio.Buffer.checkIndex
  38  0.66% 43.22%    5883 304072 java.util.regex.Pattern$GroupHead.match
  39  0.66% 43.88%    1000 304121 java.util.Scanner.cacheResult
  40  0.66% 44.54%    2002 304222 sun.nio.cs.UTF_8$Encoder.encodeLoop
  41  0.66% 45.20%    2002 304225 java.nio.charset.CharsetEncoder.encode
  42  0.60% 45.80%    9896 304026 java.lang.CharacterData.of
  43  0.60% 46.40%    1005 304045 java.util.regex.Pattern$Start.match
  44  0.60% 47.00%    1000 304111 java.nio.CharBuffer.toString
  45  0.60% 47.60%    7501 304281 java.lang.Integer.compareTo
  46  0.54% 48.14%    3006 300995 java.util.Arrays.copyOfRange
  47  0.54% 48.68%    6018 303982 java.nio.CharBuffer.length
  48  0.54% 49.22%    6018 303983 java.util.regex.Matcher.getTextLength
  49  0.54% 49.76%    1997 304037 java.nio.CharBuffer.charAt
  50  0.54% 50.30%    2000 304110 java.nio.HeapCharBuffer.toString
  51  0.54% 50.84%    1001 304123 java.util.Scanner.hasNext
  52  0.48% 51.32%    2012 302572 java.nio.Buffer.<init>
  53  0.48% 51.80%    3584 303506 java.io.BufferedInputStream.read
  54  0.48% 52.28%    9896 304027 java.lang.CharacterDataLatin1.getProperties
  55  0.48% 52.76%    6883 304053 java.nio.Buffer.checkIndex
  56  0.48% 53.24%    3000 304103 java.nio.HeapCharBuffer.<init>
  57  0.48% 53.72%    1000 304130 java.nio.CharBuffer.toString
  58  0.48% 54.20%    2002 304245 java.io.PrintStream.write
  59  0.48% 54.68%    1001 304248 sun.nio.cs.StreamEncoder.implFlushBuffer
  60  0.48% 55.16%     999 304288 java.lang.Integer.toString
  61  0.42% 55.58%    5895 300957 java.lang.CharacterDataLatin1.digit
  62  0.42% 56.00%    3009 303985 java.util.regex.Matcher.getTextLength
  63  0.42% 56.42%    9896 304018 java.nio.Buffer.position
  64  0.42% 56.84%    9896 304019 java.nio.Buffer.checkIndex
  65  0.42% 57.26%    9896 304021 java.nio.HeapCharBuffer.ix
  66  0.42% 57.68%    5883 304060 java.nio.Buffer.checkIndex
  67  0.42% 58.10%    1000 304082 java.util.regex.Pattern$Curly.match2
  68  0.42% 58.52%    1000 304088 java.util.regex.Pattern$Ques.match
  69  0.42% 58.94%    3000 304096 java.nio.CharBuffer.length
  70  0.42% 59.36%    1000 304116 java.nio.CharBuffer.toString
  71  0.42% 59.78%    1001 304148 java.util.Scanner.hasNextInt
  72  0.42% 60.20%    2998 304188 BinaryHeapPriorityQueue.top
  73  0.42% 60.62%     999 304315 java.io.PrintStream.newLine
  74  0.36% 60.98%    6883 304054 java.nio.HeapCharBuffer.ix
  75  0.36% 61.34%    5883 304063 java.util.regex.Pattern$BitClass.isSatisfiedBy
  76  0.36% 61.70%    5883 304064 java.util.regex.Pattern$Node.match
  77  0.36% 62.06%    3000 304099 java.nio.Buffer.limit
  78  0.36% 62.42%    1000 304125 java.nio.HeapCharBuffer.subSequence
  79  0.36% 62.79%    6883 304133 java.lang.String.charAt
  80  0.36% 63.15%    2152 304169 BinaryHeapPriorityQueue.comp
  81  0.36% 63.51%    2002 304205 java.nio.HeapCharBuffer.<init>
  82  0.36% 63.87%     999 304293 java.io.BufferedWriter.write
  83  0.36% 64.23%     999 304305 java.io.Writer.write
  84  0.36% 64.59%     999 304309 java.io.BufferedWriter.flushBuffer
  85  0.30% 64.89%    3584 303505 java.io.BufferedInputStream.getBufIfOpen
  86  0.30% 65.19%    7899 304024 java.lang.Character.isHighSurrogate
  87  0.30% 65.49%    1000 304058 java.util.regex.Pattern$BmpCharProperty.match
  88  0.30% 65.79%    5883 304059 java.nio.Buffer.position
  89  0.30% 66.09%    1000 304068 java.util.regex.Pattern$Branch.match
  90  0.30% 66.39%    1000 304077 java.util.regex.Pattern$GroupTail.match
  91  0.30% 66.69%    1000 304081 java.util.regex.Pattern$GroupTail.match
  92  0.30% 66.99%    1000 304112 java.util.regex.Matcher.group
  93  0.30% 67.29%    2152 304167 java.lang.Integer.compareTo
  94  0.30% 67.59%    2998 304187 BinaryHeapPriorityQueue.empty
  95  0.30% 67.89%    2002 304204 java.nio.CharBuffer.<init>
  96  0.30% 68.19%    4004 304211 java.nio.CharBuffer.arrayOffset
  97  0.30% 68.49%    4004 304218 java.nio.Buffer.position
  98  0.30% 68.79%    1001 304229 sun.nio.cs.StreamEncoder.write
  99  0.30% 69.09%    2002 304242 java.io.BufferedOutputStream.flushBuffer
 100  0.30% 69.39%    1001 304260 java.io.BufferedWriter.write
 101  0.30% 69.69%     999 304298 sun.nio.cs.StreamEncoder.flushBuffer
 102  0.30% 69.99%     999 304302 java.io.PrintStream.write
 103  0.30% 70.29%     999 304303 java.io.PrintStream.print
 104  0.24% 70.53%    5895 300956 java.lang.CharacterDataLatin1.getProperties
 105  0.24% 70.77%       1 303968 java.util.regex.Pattern.compile
 106  0.24% 71.01%    3009 303984 java.nio.CharBuffer.length
 107  0.24% 71.25%    1004 303988 java.util.regex.Pattern$CharProperty.match
 108  0.24% 71.49%    6896 304032 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
 109  0.24% 71.73%    1997 304039 java.lang.Character.codePointAt
 110  0.24% 71.97%    1997 304040 java.lang.Character.isWhitespace
 111  0.24% 72.21%    1997 304041 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
 112  0.24% 72.45%    1000 304044 java.util.regex.Pattern$Curly.match0
 113  0.24% 72.69%    1000 304074 java.util.regex.Pattern$LastNode.match
 114  0.24% 72.93%    1000 304076 java.util.regex.Pattern$GroupTail.match
 115  0.24% 73.17%    1000 304078 java.util.regex.Pattern$GroupTail.match
 116  0.24% 73.41%    1000 304089 java.util.regex.Pattern$GroupHead.match
 117  0.24% 73.65%    1000 304092 java.util.regex.Matcher.match
 118  0.24% 73.89%    1000 304093 java.util.regex.Matcher.matches
 119  0.24% 74.13%    3000 304097 java.nio.Buffer.position
 120  0.24% 74.37%    3000 304098 java.nio.Buffer.capacity
 121  0.24% 74.61%    3000 304100 java.nio.Buffer.position
 122  0.24% 74.85%    3000 304102 java.nio.CharBuffer.<init>
 123  0.24% 75.09%    1000 304106 java.util.regex.Matcher.getSubSequence
 124  0.24% 75.33%    1000 304159 BinaryHeapPriorityQueue.insert
 125  0.24% 75.57%    1002 304162 java.util.regex.Pattern$CharProperty.match
 126  0.24% 75.81%    2002 304203 sun.nio.cs.StreamEncoder.ensureOpen
 127  0.24% 76.05%     999 304290 java.lang.String.valueOf
 128  0.24% 76.29%     999 304299 java.io.OutputStreamWriter.flushBuffer
 129  0.24% 76.53%     999 304308 java.io.OutputStreamWriter.write
 130  0.24% 76.77%     999 304314 java.io.BufferedOutputStream.flush
 131  0.18% 76.95%       9 300561 java.util.zip.ZipFile.<init>
 132  0.18% 77.13%    5895 300955 java.lang.CharacterData.of
 133  0.18% 77.31%    3006 300994 java.lang.Math.min
 134  0.18% 77.49%       1 303753 java.text.NumberFormat.getInstance
 135  0.18% 77.67%    1001 303975 java.util.Scanner.integerPattern
 136  0.18% 77.85%    2009 303979 java.util.regex.Matcher.usePattern
 137  0.18% 78.03%    1997 304038 java.lang.Character.isHighSurrogate
 138  0.18% 78.21%    1000 304042 java.util.regex.Pattern$CharProperty.match
 139  0.18% 78.39%    1005 304047 java.util.regex.Matcher.find
 140  0.18% 78.57%    1000 304056 java.nio.CharBuffer.charAt
 141  0.18% 78.75%    1000 304067 java.util.regex.Pattern$BmpCharProperty.match
 142  0.18% 78.93%    1000 304069 java.util.regex.Pattern$GroupHead.match
 143  0.18% 79.11%    1000 304073 java.util.regex.Pattern$CharProperty.match
 144  0.18% 79.29%    1000 304075 java.util.regex.Pattern$BranchConn.match
 145  0.18% 79.47%    1000 304079 java.util.regex.Pattern$GroupTail.match
 146  0.18% 79.65%    1000 304083 java.util.regex.Pattern$Curly.match
 147  0.18% 79.83%    1000 304085 java.util.regex.Pattern$Branch.match
 148  0.18% 80.01%    2000 304105 java.nio.HeapCharBuffer.subSequence
 149  0.18% 80.19%    2000 304107 java.nio.Buffer.position
 150  0.18% 80.37%    1000 304126 java.util.regex.Matcher.getSubSequence
 151  0.18% 80.55%    1000 304152 java.util.Scanner.nextInt
 152  0.18% 80.73%    1000 304156 java.lang.Integer.valueOf
 153  0.18% 80.91%    1000 304157 BinaryHeapPriorityQueue.ensureNotNull
 154  0.18% 81.09%    1001 304199 java.lang.String.getChars
 155  0.18% 81.27%    2002 304206 java.nio.CharBuffer.wrap
 156  0.18% 81.45%    2002 304207 java.nio.Buffer.hasRemaining
 157  0.18% 81.63%    2002 304210 java.nio.CharBuffer.array
 158  0.18% 81.81%    2002 304233 java.nio.Buffer.position
 159  0.18% 81.99%    2002 304235 java.nio.Buffer.limit
 160  0.18% 82.17%    2002 304237 java.nio.ByteBuffer.array
 161  0.18% 82.35%    2002 304243 java.io.OutputStream.flush
 162  0.18% 82.53%    1001 304256 java.lang.String.length
 163  0.18% 82.71%    1001 304259 java.lang.String.getChars
 164  0.18% 82.89%     999 304287 java.lang.String.<init>
 165  0.18% 83.07%     999 304297 java.io.BufferedWriter.flushBuffer
 166  0.18% 83.25%     999 304311 java.io.OutputStreamWriter.flushBuffer
 167  0.18% 83.43%     999 304313 java.io.OutputStream.flush
 168  0.18% 83.61%     999 304316 java.io.PrintStream.println
 169  0.12% 83.73%      20 300128 java.lang.ClassLoader.findBootstrapClassOrNull
 170  0.12% 83.85%      19 300241 java.net.URLStreamHandler.toExternalForm
 171  0.12% 83.97%      19 300287 java.io.UnixFileSystem.normalize
 172  0.12% 84.09%      14 300358 java.io.File.exists
 173  0.12% 84.21%       9 300368 java.io.UnixFileSystem.normalize
 174  0.12% 84.33%       4 300427 java.lang.Class.forName
 175  0.12% 84.45%     757 301772 java.util.regex.Pattern.isSupplementary
 176  0.12% 84.57%       4 301774 java.util.regex.Pattern.RemoveQEQuoting
 177  0.12% 84.69%     186 302052 java.util.regex.Pattern.range
 178  0.12% 84.81%    3010 302129 java.nio.Buffer.remaining
 179  0.12% 84.93%      11 302471 java.io.UnixFileSystem.getBooleanAttributes
 180  0.12% 85.05%    2012 302570 java.nio.Buffer.limit
 181  0.12% 85.17%    2012 302571 java.nio.Buffer.position
 182  0.12% 85.29%     896 303507 java.io.DataInputStream.readInt
 183  0.12% 85.41%     182 303824 java.util.regex.Pattern.bitsOrSingle
 184  0.12% 85.53%    1001 303977 java.util.Scanner.saveState
 185  0.12% 85.65%    3016 303980 java.nio.Buffer.limit
 186  0.12% 85.77%    1004 303989 java.util.regex.Pattern$Curly.match
 187  0.12% 85.89%    1003 304025 java.lang.Character.codePointAt
 188  0.12% 86.01%    1000 304055 java.nio.HeapCharBuffer.get
 189  0.12% 86.13%    1000 304084 java.util.regex.Pattern$GroupHead.match
 190  0.12% 86.25%    1000 304086 java.util.regex.Pattern$GroupHead.match
 191  0.12% 86.37%    3000 304095 java.nio.Buffer.remaining
 192  0.12% 86.49%    2000 304108 java.nio.Buffer.limit
 193  0.12% 86.61%    1000 304114 java.util.regex.Matcher.groupCount
 194  0.12% 86.73%    1000 304115 java.util.regex.Matcher.getSubSequence
 195  0.12% 86.85%    1000 304117 java.util.regex.Matcher.group
 196  0.12% 86.97%    1001 304122 java.util.Scanner.revertState
 197  0.12% 87.09%    1000 304124 java.util.regex.Matcher.groupCount
 198  0.12% 87.21%    1000 304129 java.nio.HeapCharBuffer.toString
 199  0.12% 87.33%    1000 304147 java.lang.Integer.valueOf
 200  0.12% 87.45%    1000 304155 java.lang.Integer.<init>
 201  0.12% 87.58%    1002 304164 java.util.regex.Pattern$Curly.match0
 202  0.12% 87.70%    2152 304168 java.lang.Integer.compareTo
 203  0.12% 87.82%    1999 304189 java.lang.Integer.intValue
 204  0.12% 87.94%    1001 304197 java.io.BufferedWriter.ensureOpen
 205  0.12% 88.06%    2002 304208 java.nio.CharBuffer.hasArray
 206  0.12% 88.18%    2002 304209 java.nio.ByteBuffer.hasArray
 207  0.12% 88.30%    4004 304213 java.nio.Buffer.limit
 208  0.12% 88.42%    4004 304215 java.nio.ByteBuffer.arrayOffset
 209  0.12% 88.54%    2002 304216 java.lang.Math.min
 210  0.12% 88.66%    2002 304217 java.nio.CharBuffer.arrayOffset
 211  0.12% 88.78%    2002 304227 java.nio.Buffer.remaining
 212  0.12% 88.90%    2002 304239 java.io.PrintStream.ensureOpen
 213  0.12% 89.02%    2002 304246 java.nio.Buffer.clear
 214  0.12% 89.14%    1001 304264 sun.nio.cs.StreamEncoder.write
 215  0.12% 89.26%    1001 304267 sun.nio.cs.StreamEncoder.isOpen
 216  0.12% 89.38%    1001 304268 sun.nio.cs.StreamEncoder.implFlushBuffer
 217  0.12% 89.50%     999 304286 java.lang.Integer.getChars
 218  0.12% 89.62%     999 304289 java.lang.Integer.toString
 219  0.12% 89.74%     999 304306 java.io.BufferedWriter.newLine
 220  0.12% 89.86%     999 304312 java.io.BufferedOutputStream.flushBuffer
 221  0.06% 89.92%      18 300025 java.lang.String.equals
 222  0.06% 89.98%       8 300067 java.lang.StringCoding.access$000
 223  0.06% 90.04%      56 300093 java.util.concurrent.locks.AbstractQueuedSynchronizer.getState
 224  0.06% 90.10%      56 300096 java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire
 225  0.06% 90.16%      56 300105 java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
 226  0.06% 90.22%      40 300112 java.lang.String.indexOf
 227  0.06% 90.28%      20 300119 java.lang.ClassLoader.getClassLoadingLock
 228  0.06% 90.34%       8 300141 java.lang.String.concat
 229  0.06% 90.40%     181 300161 java.lang.Character.toLowerCase
 230  0.06% 90.46%      80 300162 java.lang.Character.toLowerCase
 231  0.06% 90.52%     170 300175 java.lang.Math.min
 232  0.06% 90.58%       9 300187 java.util.HashMap.containsKey
 233  0.06% 90.64%       1 300207 sun.misc.SharedSecrets.getJavaUtilZipFileAccess
 234  0.06% 90.70%      19 300250 java.lang.StringBuilder.append
 235  0.06% 90.76%      19 300254 java.lang.AbstractStringBuilder.append
 236  0.06% 90.82%     101 300261 java.lang.Character.toLowerCase
 237  0.06% 90.88%      19 300271 java.net.Parts.<init>
 238  0.06% 90.94%     998 300286 java.lang.String.charAt
 239  0.06% 91.00%      14 300321 java.io.UnixFileSystem.normalize
 240  0.06% 91.06%      87 300331 java.lang.ref.SoftReference.get
 241  0.06% 91.12%      87 300343 java.lang.StringCoding.access$300
 242  0.06% 91.18%      53 300348 java.lang.String.lastIndexOf
 243  0.06% 91.24%      53 300352 java.lang.String.<init>
 244  0.06% 91.30%       9 300372 java.io.File.<init>
 245  0.06% 91.36%       7 300384 sun.nio.cs.FastCharsetProvider.toLower
 246  0.06% 91.42%       5 300405 sun.util.PreHashedMap.put
 247  0.06% 91.48%      15 300486 java.nio.charset.Charset.atBugLevel
 248  0.06% 91.54%       9 300559 java.lang.StringCoding.encode
 249  0.06% 91.60%      14 300567 sun.misc.URLClassPath$JarLoader.getJarFile
 250  0.06% 91.66%      68 300598 java.nio.charset.CharsetEncoder.reset
 251  0.06% 91.72%      14 300616 sun.misc.URLClassPath$JarLoader$1.run
 252  0.06% 91.78%      14 300618 sun.misc.URLClassPath$JarLoader.ensureOpen
 253  0.06% 91.84%      19 300619 sun.misc.URLClassPath$JarLoader.<init>
 254  0.06% 91.90%       7 300626 sun.misc.URLClassPath$JarLoader.parseExtensionsDependencies
 255  0.06% 91.96%       7 300653 java.util.Vector.size
 256  0.06% 92.02%       8 300708 java.util.zip.ZipFile.getInflater
 257  0.06% 92.08%       8 300763 java.util.zip.ZipFile$ZipFileInputStream.read
 258  0.06% 92.14%       8 300782 java.util.zip.Inflater.ensureOpen
 259  0.06% 92.20%       8 300793 java.util.zip.ZipFile$ZipFileInflaterInputStream.close
 260  0.06% 92.26%       8 300796 java.util.jar.JarFile.hasClassPathAttribute
 261  0.06% 92.32%      36 300811 sun.misc.URLClassPath.getLoader
 262  0.06% 92.38%       1 300896 sun.nio.cs.ThreadLocalCoders.<clinit>
 263  0.06% 92.44%       6 300982 sun.nio.cs.UTF_8$Decoder.decodeArrayLoop
 264  0.06% 92.50%      43 301036 java.util.HashMap.hash
 265  0.06% 92.56%       6 301051 java.lang.StringCoding$StringEncoder.encode
 266  0.06% 92.62%      20 301113 java.lang.String.substring
 267  0.06% 92.68%      16 301128 java.lang.String.endsWith
 268  0.06% 92.74%      88 301167 java.lang.String.charAt
 269  0.06% 92.80%       4 301199 sun.misc.URLClassPath$FileLoader.getResource
 270  0.06% 92.86%       6 301220 java.lang.StringCoding$StringEncoder.encode
 271  0.06% 92.92%       6 301242 java.io.FileInputStream.read
 272  0.06% 92.98%       1 301355 sun.net.www.ParseUtil.decode
 273  0.06% 93.04%       1 301379 sun.misc.Hashing.randomHashSeed
 274  0.06% 93.10%       1 301394 sun.net.www.protocol.file.Handler.createFileURLConnection
 275  0.06% 93.16%       1 301445 sun.net.www.ParseUtil.decode
 276  0.06% 93.22%       1 301546 java.util.ArrayList.add
 277  0.06% 93.28%       1 301596 java.util.HashMap.hash
 278  0.06% 93.34%       4 301656 java.lang.ClassLoader.defineClass
 279  0.06% 93.40%       4 301658 java.net.URLClassLoader.defineClass
 280  0.06% 93.46%     757 301768 java.lang.Character.isHighSurrogate
 281  0.06% 93.52%     757 301769 java.lang.Character.codePointAtImpl
 282  0.06% 93.58%     757 301770 java.lang.String.codePointAt
 283  0.06% 93.64%     757 301771 java.lang.Character.isSurrogate
 284  0.06% 93.70%      39 301809 java.util.HashMap.createEntry
 285  0.06% 93.76%      39 301812 java.util.regex.Pattern$CharPropertyNames.defCategory
 286  0.06% 93.82%      86 301814 java.util.HashMap.indexFor
 287  0.06% 93.88%      18 301872 java.util.HashMap.put
 288  0.06% 93.94%       1 301959 java.util.regex.Pattern$CharPropertyNames.<clinit>
 289  0.06% 94.00%      19 301970 java.util.regex.Pattern.charPropertyNodeFor
 290  0.06% 94.06%       6 301981 java.util.regex.Pattern.has
 291  0.06% 94.12%       4 301998 java.util.regex.Pattern$Start.<init>
 292  0.06% 94.18%     368 302033 java.util.regex.Pattern.peek
 293  0.06% 94.24%       4 302043 java.lang.String.<init>
 294  0.06% 94.30%       4 302051 java.util.regex.Pattern.family
 295  0.06% 94.36%     187 302062 java.util.regex.Pattern.has
 296  0.06% 94.42%       1 302093 java.util.Scanner.<clinit>
 297  0.06% 94.48%       4 302153 sun.security.action.GetPropertyAction.run
 298  0.06% 94.54%       3 302199 java.lang.ref.Reference.get
 299  0.06% 94.60%       2 302336 sun.util.locale.UnicodeLocaleExtension.<init>
 300  0.06% 94.66%       2 302343 java.util.Locale.getCompatibilityExtensions
 301  0.06% 94.72%     548 302440 java.lang.String.charAt
 302  0.06% 94.78%      11 302476 java.util.Arrays.copyOfRange
 303  0.06% 94.84%      75 302491 java.lang.String.charAt
 304  0.06% 94.90%      90 302609 java.util.Arrays.copyOfRange
 305  0.06% 94.96%      91 302612 java.io.BufferedReader.readLine
 306  0.06% 95.02%      11 302694 java.net.Parts.<init>
 307  0.06% 95.08%      32 302714 java.lang.String.length
 308  0.06% 95.14%      32 302715 java.lang.AbstractStringBuilder.ensureCapacityInternal
 309  0.06% 95.20%       4 302763 java.lang.AbstractStringBuilder.append
 310  0.06% 95.26%       3 302787 sun.misc.URLClassPath.getResources
 311  0.06% 95.32%       3 302790 java.lang.ClassLoader.getBootstrapResources
 312  0.06% 95.38%      11 302812 java.net.URL.getPort
 313  0.06% 95.44%      21 302837 sun.misc.URLClassPath.access$000
 314  0.06% 95.50%      24 302879 sun.misc.URLClassPath.getLoader
 315  0.06% 95.56%      21 302883 java.util.jar.JarFile.getJarEntry
 316  0.06% 95.62%       1 302898 sun.util.LocaleServiceProviderPool.<init>
 317  0.06% 95.68%       1 302945 java.util.ResourceBundle$Control.<clinit>
 318  0.06% 95.74%       1 303021 java.util.ResourceBundle$RBClassLoader.<clinit>
 319  0.06% 95.80%       1 303080 java.util.ResourceBundle$Control$CandidateListCache.getDefaultList
 320  0.06% 95.86%       1 303274 java.util.ResourceBundle.putBundleInCache
 321  0.06% 95.92%       3 303285 sun.util.locale.BaseLocale.getScript
 322  0.06% 95.98%       3 303349 java.util.ResourceBundle.getBundleImpl
 323  0.06% 96.04%       2 303461 java.lang.AbstractStringBuilder.<init>
 324  0.06% 96.10%       1 303474 java.io.UnixFileSystem.normalize
 325  0.06% 96.16%       7 303508 java.util.Currency.readIntArray
 326  0.06% 96.22%      82 303519 java.io.BufferedInputStream.read
 327  0.06% 96.28%       1 303557 java.util.Currency$1.run
 328  0.06% 96.34%       1 303625 sun.util.resources.LocaleData$1.run
 329  0.06% 96.40%       1 303667 java.text.DecimalFormatSymbols.initialize
 330  0.06% 96.46%       1 303747 java.lang.AbstractStringBuilder.ensureCapacityInternal
 331  0.06% 96.52%       1 303752 java.text.DecimalFormat.<init>
 332  0.06% 96.58%       1 303787 java.util.Scanner.<init>
 333  0.06% 96.64%       7 303800 java.util.Arrays.copyOfRange
 334  0.06% 96.70%      35 303817 java.util.regex.Pattern$GroupTail.<init>
 335  0.06% 96.76%     365 303821 java.util.regex.Pattern.has
 336  0.06% 96.82%     185 303823 java.util.regex.Pattern$BitClass.add
 337  0.06% 96.88%      22 303825 java.util.regex.Pattern.clazz
 338  0.06% 96.94%      50 303830 java.util.regex.Pattern.group0
 339  0.06% 97.00%     180 303834 java.util.regex.ASCII.isUpper
 340  0.06% 97.06%      35 303854 java.util.regex.Pattern.peek
 341  0.06% 97.12%      35 303859 java.util.regex.Pattern.closure
 342  0.06% 97.18%    6018 303981 java.nio.Buffer.remaining
 343  0.06% 97.24%    1004 303990 java.util.regex.Matcher.match
 344  0.06% 97.30%    1004 303991 java.util.regex.Matcher.lookingAt
 345  0.06% 97.36%       2 304004 java.io.BufferedInputStream.read1
 346  0.06% 97.42%       8 304007 sun.nio.cs.StreamDecoder.implRead
 347  0.06% 97.48%    1003 304030 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
 348  0.06% 97.54%    1000 304035 java.lang.Character.charCount
 349  0.06% 97.60%    1005 304046 java.util.regex.Matcher.search
 350  0.06% 97.66%    3000 304048 java.util.regex.Matcher.end
 351  0.06% 97.72%    1000 304052 java.nio.Buffer.checkIndex
 352  0.06% 97.78%    1000 304080 java.util.regex.Pattern$BranchConn.match
 353  0.06% 97.84%    1000 304090 java.util.regex.Pattern$GroupHead.match
 354  0.06% 97.90%    1000 304091 java.util.regex.Pattern$Branch.match
 355  0.06% 97.96%    1000 304113 java.util.regex.Matcher.group
 356  0.06% 98.02%    1000 304118 java.util.regex.Matcher.group
 357  0.06% 98.08%    1000 304119 java.util.regex.Matcher.end
 358  0.06% 98.14%    1000 304127 java.nio.Buffer.position
 359  0.06% 98.20%    1000 304128 java.nio.Buffer.limit
 360  0.06% 98.26%    1000 304131 java.util.regex.Matcher.group
 361  0.06% 98.32%     256 304143 java.lang.Integer.<init>
 362  0.06% 98.38%       1 304144 java.lang.Integer$IntegerCache.<clinit>
 363  0.06% 98.44%    1000 304145 java.lang.Number.<init>
 364  0.06% 98.50%    1001 304149 java.util.Scanner.hasNextInt
 365  0.06% 98.56%    1000 304150 java.lang.Integer.intValue
 366  0.06% 98.62%    1000 304151 java.util.Scanner.useTypeCache
 367  0.06% 98.68%    1000 304153 java.util.Scanner.nextInt
 368  0.06% 98.74%    1002 304161 java.util.regex.Pattern$Node.match
 369  0.06% 98.80%       6 304183 java.util.Scanner.makeSpace
 370  0.06% 98.86%    4004 304212 java.nio.Buffer.position
 371  0.06% 98.92%    2002 304214 java.nio.ByteBuffer.array
 372  0.06% 98.98%    2002 304219 java.nio.ByteBuffer.arrayOffset
 373  0.06% 99.04%    2002 304226 java.nio.charset.CoderResult.isUnderflow
 374  0.06% 99.10%    2002 304234 java.nio.Buffer.flip
 375  0.06% 99.16%    2002 304236 java.nio.Buffer.position
 376  0.06% 99.22%    2002 304238 java.nio.ByteBuffer.arrayOffset
 377  0.06% 99.28%    2002 304240 java.io.BufferedOutputStream.write
 378  0.06% 99.34%    2002 304241 java.io.FileOutputStream.write
 379  0.06% 99.40%    1001 304257 java.io.BufferedWriter.ensureOpen
 380  0.06% 99.46%     999 304291 java.io.PrintStream.ensureOpen
 381  0.06% 99.52%     999 304292 java.lang.String.length
 382  0.06% 99.58%     999 304294 java.io.Writer.write
 383  0.06% 99.64%     999 304295 java.io.BufferedWriter.ensureOpen
 384  0.06% 99.70%     999 304296 java.io.OutputStreamWriter.write
 385  0.06% 99.76%     999 304301 java.lang.String.indexOf
 386  0.06% 99.82%     999 304310 sun.nio.cs.StreamEncoder.flushBuffer
 387  0.06% 99.88%       1 304345 sun.misc.FloatingDecimal.dtoa
 388  0.06% 99.94%       1 304362 java.lang.Double.toString
 389  0.06% 100.00%       1 304400 java.lang.Shutdown.sequence
CPU TIME (ms) END
