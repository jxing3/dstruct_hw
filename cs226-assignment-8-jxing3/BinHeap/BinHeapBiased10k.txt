JAVA PROFILE 1.0.1, created Sun Nov  3 15:15:03 2013

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000016f, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=5000016f, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=5000016f, id = 200003, name="DestroyJavaVM", group="main")
THREAD END (id = 200003)
TRACE 304022:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304021:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304061:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304283:
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304028:
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304032:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
TRACE 304280:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304282:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304030:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304278:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304281:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303991:
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304069:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304279:
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304276:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304161:
	java.lang.Integer.compare(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304277:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.largerChild(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304027:
	java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304133:
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304135:
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304103:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304060:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304033:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
TRACE 303986:
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304071:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304065:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304134:
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304387:
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304064:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304072:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 303982:
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 300957:
	java.lang.CharacterDataLatin1.digit(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
TRACE 304031:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 303981:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304100:
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304081:
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304018:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304025:
	java.lang.CharacterData.of(CharacterData.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 304122:
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304044:
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304019:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
TRACE 304154:
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304023:
	java.lang.Character.isHighSurrogate(Character.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304026:
	java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:Unknown line)
	java.lang.CharacterDataLatin1.isWhitespace(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
TRACE 304145:
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304132:
	java.lang.String.charAt(String.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304017:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
TRACE 303985:
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304038:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304020:
	java.nio.HeapCharBuffer.ix(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
TRACE 304095:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 303984:
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304039:
	java.lang.Character.isWhitespace(Character.java:Unknown line)
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 304036:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 303983:
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
TRACE 304053:
	java.nio.HeapCharBuffer.ix(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304102:
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304101:
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304108:
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 303980:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.region(Matcher.java:Unknown line)
TRACE 304163:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304052:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304059:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 300956:
	java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:Unknown line)
	java.lang.CharacterDataLatin1.digit(CharacterDataLatin1.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
TRACE 303987:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
TRACE 300995:
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
TRACE 304129:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304058:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304111:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304115:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304063:
	java.util.regex.Pattern$Node.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
TRACE 304187:
	BinaryHeapPriorityQueue.top(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304164:
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304109:
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 300955:
	java.lang.CharacterData.of(CharacterData.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Character.digit(Character.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
TRACE 304162:
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	java.lang.Integer.compareTo(Integer.java:Unknown line)
	BinaryHeapPriorityQueue.comp(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
TRACE 304040:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304062:
	java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304220:
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304066:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304120:
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304104:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304130:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304082:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304157:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304041:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304099:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 304116:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304024:
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304057:
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304098:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 304110:
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 303988:
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304047:
	java.util.regex.Matcher.end(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304054:
	java.nio.HeapCharBuffer.get(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304055:
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304092:
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304159:
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
TRACE 304096:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304149:
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304153:
	BinaryHeapPriorityQueue.getParent(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304075:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304128:
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 303979:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 303990:
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 303989:
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.lookingAt(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304078:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304166:
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 302129:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.getTextLength(Matcher.java:Unknown line)
	java.util.regex.Matcher.reset(Matcher.java:Unknown line)
TRACE 304085:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304086:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304124:
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304087:
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304043:
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
TRACE 304084:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304090:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304079:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
TRACE 304105:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304045:
	java.util.regex.Matcher.search(Matcher.java:Unknown line)
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304076:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
TRACE 304097:
	java.nio.Buffer.capacity(Buffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
TRACE 304106:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304246:
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
TRACE 303978:
	java.util.regex.Matcher.usePattern(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304088:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304091:
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
TRACE 304146:
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304150:
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304151:
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304125:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304144:
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304074:
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304114:
	java.util.regex.Matcher.getSubSequence(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304168:
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304029:
	java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304083:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304186:
	BinaryHeapPriorityQueue.empty(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.top(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304219:
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304046:
	java.util.regex.Matcher.find(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304067:
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304068:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
TRACE 304080:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304094:
	java.nio.Buffer.remaining(Buffer.java:Unknown line)
	java.nio.CharBuffer.length(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.subSequence(HeapCharBuffer.java:Unknown line)
TRACE 304117:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304188:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304077:
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304152:
	BinaryHeapPriorityQueue.ensureNotNull(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.insert(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303975:
	java.util.Scanner.ensureOpen(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304089:
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
	java.util.regex.Matcher.matches(Matcher.java:Unknown line)
TRACE 304112:
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304118:
	java.util.regex.Matcher.end(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304148:
	java.util.Scanner.useTypeCache(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304107:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
TRACE 304121:
	java.util.Scanner.revertState(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304155:
	java.lang.Character.charCount(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 303788:
	java.util.Scanner.setRadix(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304037:
	java.lang.Character.isHighSurrogate(Character.java:Unknown line)
	java.lang.Character.codePointAt(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
TRACE 304127:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304131:
	java.lang.String.length(String.java:Unknown line)
	java.lang.Integer.parseInt(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304156:
	java.util.regex.Pattern$Node.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304224:
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 303976:
	java.util.Scanner.saveState(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304035:
	java.util.regex.Pattern$Node.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304073:
	java.util.regex.Pattern$LastNode.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$BranchConn.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupTail.match(Pattern.java:Unknown line)
TRACE 304113:
	java.util.regex.Matcher.groupCount(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
TRACE 304119:
	java.util.regex.Matcher.pattern(Matcher.java:Unknown line)
	java.util.Scanner.cacheResult(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304158:
	java.util.regex.Pattern$LastNode.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Matcher.match(Matcher.java:Unknown line)
TRACE 304227:
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
TRACE 304049:
	java.util.regex.Matcher.start(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304070:
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Branch.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match2(Pattern.java:Unknown line)
TRACE 304241:
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
TRACE 304275:
	BinaryHeapPriorityQueue.empty(BinaryHeapPriorityQueue.java:Unknown line)
	BinaryHeapPriorityQueue.remove(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304301:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304048:
	java.util.regex.Matcher.requireEnd(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304051:
	java.nio.Buffer.checkIndex(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304056:
	java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$GroupHead.match(Pattern.java:Unknown line)
TRACE 304160:
	java.util.regex.Matcher.hitEnd(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
	java.util.Scanner.hasNext(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304221:
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 304244:
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304287:
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304314:
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 300994:
	java.lang.Math.min(Math.java:Unknown line)
	java.util.Arrays.copyOfRange(Arrays.java:Unknown line)
	java.lang.String.<init>(String.java:Unknown line)
	java.nio.HeapCharBuffer.toString(HeapCharBuffer.java:Unknown line)
TRACE 303506:
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
TRACE 304126:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.toString(CharBuffer.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304167:
	java.lang.Number.<init>(Number.java:Unknown line)
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304228:
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 302572:
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
TRACE 304034:
	java.lang.Character.charCount(Character.java:Unknown line)
	java.util.regex.Pattern$CharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304042:
	java.util.regex.Pattern$LastNode.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match0(Pattern.java:Unknown line)
	java.util.regex.Pattern$Curly.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Start.match(Pattern.java:Unknown line)
TRACE 304123:
	java.util.regex.Matcher.groupCount(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304185:
	BinaryHeapPriorityQueue.empty(BinaryHeapPriorityQueue.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303504:
	java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:Unknown line)
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
TRACE 303974:
	java.util.Scanner.integerPattern(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304093:
	java.util.regex.Matcher.groupCount(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.regex.Matcher.group(Matcher.java:Unknown line)
	java.util.Scanner.getCompleteTokenInBuffer(Scanner.java:Unknown line)
TRACE 304147:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	java.util.Scanner.nextInt(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304165:
	java.lang.Number.<init>(Number.java:Unknown line)
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304204:
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 304209:
	java.nio.CharBuffer.array(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304238:
	java.io.PrintStream.ensureOpen(PrintStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304243:
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304263:
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304267:
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304289:
	java.lang.String.valueOf(String.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304292:
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304298:
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304302:
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 303505:
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	java.io.DataInputStream.readInt(DataInputStream.java:Unknown line)
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
TRACE 304050:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.CharBuffer.charAt(CharBuffer.java:Unknown line)
	java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:Unknown line)
	java.util.regex.Pattern$Ques.match(Pattern.java:Unknown line)
TRACE 304203:
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304207:
	java.nio.CharBuffer.hasArray(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304215:
	java.lang.Math.min(Math.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304225:
	java.nio.charset.CoderResult.isUnderflow(CoderResult.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304240:
	java.io.FileOutputStream.write(FileOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304300:
	java.lang.String.indexOf(String.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304308:
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304309:
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 300128:
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
TRACE 300561:
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
TRACE 301769:
	java.lang.Character.codePointAtImpl(Character.java:Unknown line)
	java.lang.String.codePointAt(String.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
TRACE 304002:
	java.io.FileInputStream.read(FileInputStream.java:Unknown line)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:Unknown line)
	java.io.BufferedInputStream.read(BufferedInputStream.java:Unknown line)
	sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:Unknown line)
TRACE 304196:
	java.io.BufferedWriter.ensureOpen(BufferedWriter.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304197:
	java.io.BufferedWriter.min(BufferedWriter.java:Unknown line)
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304205:
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304206:
	java.nio.Buffer.hasRemaining(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
TRACE 304208:
	java.nio.ByteBuffer.hasArray(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
TRACE 304211:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304222:
	java.nio.charset.CoderResult.isOverflow(CoderResult.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
TRACE 304234:
	java.nio.Buffer.limit(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304239:
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
TRACE 304242:
	java.io.OutputStream.flush(OutputStream.java:Unknown line)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
TRACE 304245:
	java.nio.Buffer.clear(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304247:
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
TRACE 304305:
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304313:
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 300287:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
TRACE 300321:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.FileURLMapper.exists(FileURLMapper.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(URLClassPath.java:Unknown line)
TRACE 300813:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.jar.JarFile.getEntry(JarFile.java:Unknown line)
	java.util.jar.JarFile.getJarEntry(JarFile.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:Unknown line)
TRACE 301772:
	java.util.regex.Pattern.isSupplementary(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301774:
	java.util.regex.Pattern.RemoveQEQuoting(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
TRACE 301959:
	java.util.regex.Pattern$CharPropertyNames.<clinit>(Pattern.java:Unknown line)
	java.util.regex.Pattern.charPropertyNodeFor(Pattern.java:Unknown line)
	java.util.regex.Pattern.family(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 302032:
	java.util.regex.Pattern.has(Pattern.java:Unknown line)
	java.util.regex.Pattern.peek(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
TRACE 302033:
	java.util.regex.Pattern.peek(Pattern.java:Unknown line)
	java.util.regex.Pattern.range(Pattern.java:Unknown line)
	java.util.regex.Pattern.clazz(Pattern.java:Unknown line)
	java.util.regex.Pattern.sequence(Pattern.java:Unknown line)
TRACE 302093:
	java.util.Scanner.<clinit>(Scanner.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 302441:
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.Launcher.getClassPath(Launcher.java:Unknown line)
	sun.misc.Launcher.access$200(Launcher.java:Unknown line)
TRACE 302571:
	java.nio.Buffer.position(Buffer.java:Unknown line)
	java.nio.Buffer.<init>(Buffer.java:Unknown line)
	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
TRACE 302575:
	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.read(StreamDecoder.java:Unknown line)
	java.io.InputStreamReader.read(InputStreamReader.java:Unknown line)
TRACE 302579:
	sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Decoder.decodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetDecoder.decode(CharsetDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:Unknown line)
TRACE 302646:
	sun.misc.MetaIndex.registerDirectory(MetaIndex.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(Launcher.java:Unknown line)
	sun.misc.Launcher$BootClassPathHolder.<clinit>(Launcher.java:Unknown line)
TRACE 303507:
	java.util.Currency.readIntArray(Currency.java:Unknown line)
	java.util.Currency.access$000(Currency.java:Unknown line)
	java.util.Currency$1.run(Currency.java:Unknown line)
	java.util.Currency.<clinit>(Currency.java:Unknown line)
TRACE 303752:
	java.text.NumberFormat.getInstance(NumberFormat.java:Unknown line)
	java.text.NumberFormat.getNumberInstance(NumberFormat.java:Unknown line)
	java.util.Scanner.useLocale(Scanner.java:Unknown line)
	java.util.Scanner.<init>(Scanner.java:Unknown line)
TRACE 303967:
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.regex.Pattern.<init>(Pattern.java:Unknown line)
	java.util.regex.Pattern.compile(Pattern.java:Unknown line)
	java.util.Scanner$1.create(Scanner.java:Unknown line)
TRACE 304143:
	java.lang.Integer$IntegerCache.<clinit>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
	java.util.Scanner.hasNextInt(Scanner.java:Unknown line)
TRACE 304184:
	java.io.BufferedInputStream.available(BufferedInputStream.java:Unknown line)
	sun.nio.cs.StreamDecoder.inReady(StreamDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:Unknown line)
	sun.nio.cs.StreamDecoder.read(StreamDecoder.java:Unknown line)
TRACE 304210:
	java.nio.CharBuffer.arrayOffset(CharBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304213:
	java.nio.ByteBuffer.array(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304214:
	java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
TRACE 304233:
	java.nio.Buffer.flip(Buffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304236:
	java.nio.ByteBuffer.array(ByteBuffer.java:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
TRACE 304259:
	java.io.BufferedWriter.write(BufferedWriter.java:Unknown line)
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
TRACE 304284:
	java.lang.Integer.stringSize(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 304285:
	java.lang.Integer.getChars(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.Integer.toString(Integer.java:Unknown line)
	java.lang.String.valueOf(String.java:Unknown line)
TRACE 304295:
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.write(PrintStream.java:Unknown line)
	java.io.PrintStream.print(PrintStream.java:Unknown line)
TRACE 304304:
	java.io.Writer.write(Writer.java:Unknown line)
	java.io.BufferedWriter.newLine(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304307:
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:Unknown line)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
TRACE 304310:
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
	java.io.PrintStream.newLine(PrintStream.java:Unknown line)
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
TRACE 304315:
	java.io.PrintStream.println(PrintStream.java:Unknown line)
	UniqueMod.main(UniqueMod.java:Unknown line)
CPU TIME (ms) BEGIN (total = 11943) Sun Nov  3 15:15:15 2013
rank   self  accum   count trace method
   1  3.10%  3.10%   78879 304022 java.nio.CharBuffer.charAt
   2  2.78%  5.88%   98870 304021 java.nio.HeapCharBuffer.get
   3  2.26%  8.14%   58642 304061 java.nio.CharBuffer.charAt
   4  2.23% 10.37%   10000 304283 BinaryHeapPriorityQueue.remove
   5  2.04% 12.41%   78879 304028 java.lang.Character.isWhitespace
   6  2.04% 14.45%   68870 304032 java.util.regex.Pattern$CharProperty.match
   7  1.92% 16.37%  108122 304280 java.lang.Integer.compareTo
   8  1.86% 18.23%  108122 304282 BinaryHeapPriorityQueue.comp
   9  1.84% 20.07%   68870 304030 java.lang.Character.codePointAt
  10  1.84% 21.91%  108118 304278 BinaryHeapPriorityQueue.comp
  11  1.83% 23.75%  108122 304281 java.lang.Integer.compareTo
  12  1.78% 25.53%   10070 303991 java.util.Scanner.getCompleteTokenInBuffer
  13  1.75% 27.28%   58642 304069 java.util.regex.Pattern$BmpCharProperty.match
  14  1.73% 29.01%  116537 304279 BinaryHeapPriorityQueue.largerChild
  15  1.72% 30.73%  108118 304276 java.lang.Integer.compareTo
  16  1.68% 32.41%  239187 304161 java.lang.Integer.compare
  17  1.62% 34.03%  108118 304277 java.lang.Integer.compareTo
  18  1.61% 35.64%   98870 304027 java.lang.CharacterDataLatin1.isWhitespace
  19  1.58% 37.22%   58642 304133 java.lang.Character.digit
  20  1.57% 38.79%   10000 304135 java.lang.Integer.parseInt
  21  1.51% 40.30%   30000 304103 java.nio.HeapCharBuffer.subSequence
  22  1.47% 41.77%   58642 304060 java.nio.HeapCharBuffer.get
  23  1.25% 43.01%   68870 304033 java.util.regex.Pattern$Curly.match
  24  1.21% 44.22%   30070 303986 java.util.regex.Matcher.region
  25  1.15% 45.37%   58642 304071 java.util.regex.Pattern$Branch.match
  26  1.11% 46.48%   58642 304065 java.util.regex.Pattern$BranchConn.match
  27  1.06% 47.54%   58642 304134 java.lang.Character.digit
  28  1.05% 48.59%       1 304387 UniqueMod.main
  29  1.01% 49.60%   58642 304064 java.util.regex.Pattern$GroupTail.match
  30  1.01% 50.62%   58642 304072 java.util.regex.Pattern$GroupHead.match
  31  1.00% 51.62%   60140 303982 java.util.regex.Matcher.getTextLength
  32  1.00% 52.62%   58654 300957 java.lang.CharacterDataLatin1.digit
  33  0.99% 53.60%   68870 304031 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
  34  0.97% 54.58%   60140 303981 java.nio.CharBuffer.length
  35  0.90% 55.47%   30000 304100 java.nio.Buffer.<init>
  36  0.89% 56.36%   10000 304081 java.util.regex.Pattern$Curly.match2
  37  0.76% 57.12%   98870 304018 java.nio.Buffer.checkIndex
  38  0.74% 57.86%   98870 304025 java.lang.CharacterData.of
  39  0.72% 58.58%   10001 304122 java.util.Scanner.hasNext
  40  0.71% 59.29%   10060 304044 java.util.regex.Pattern$Start.match
  41  0.70% 59.99%   98870 304019 java.nio.Buffer.checkIndex
  42  0.70% 60.70%   10000 304154 BinaryHeapPriorityQueue.insert
  43  0.67% 61.37%   78879 304023 java.lang.Character.isHighSurrogate
  44  0.67% 62.04%   98870 304026 java.lang.CharacterDataLatin1.getProperties
  45  0.67% 62.71%   10001 304145 java.util.Scanner.hasNextInt
  46  0.65% 63.36%   68642 304132 java.lang.String.charAt
  47  0.64% 64.00%   98870 304017 java.nio.Buffer.position
  48  0.61% 64.61%   30070 303985 java.util.regex.Matcher.reset
  49  0.61% 65.22%   19991 304038 java.lang.Character.codePointAt
  50  0.60% 65.82%   98870 304020 java.nio.HeapCharBuffer.ix
  51  0.60% 66.42%   30000 304095 java.nio.CharBuffer.length
  52  0.59% 67.02%   30070 303984 java.util.regex.Matcher.getTextLength
  53  0.57% 67.59%   19991 304039 java.lang.Character.isWhitespace
  54  0.56% 68.15%   19991 304036 java.nio.CharBuffer.charAt
  55  0.54% 68.68%   30070 303983 java.nio.CharBuffer.length
  56  0.53% 69.21%   68642 304053 java.nio.HeapCharBuffer.ix
  57  0.53% 69.74%   30000 304102 java.nio.HeapCharBuffer.<init>
  58  0.50% 70.24%   30000 304101 java.nio.CharBuffer.<init>
  59  0.49% 70.73%   30000 304108 java.lang.String.<init>
  60  0.48% 71.20%   60140 303980 java.nio.Buffer.remaining
  61  0.48% 71.68%   22947 304163 java.lang.Integer.compareTo
  62  0.47% 72.15%   68642 304052 java.nio.Buffer.checkIndex
  63  0.44% 72.59%   58642 304059 java.nio.Buffer.checkIndex
  64  0.44% 73.03%   58654 300956 java.lang.CharacterDataLatin1.getProperties
  65  0.44% 73.47%   10010 303987 java.util.regex.Pattern$CharProperty.match
  66  0.43% 73.89%   30006 300995 java.util.Arrays.copyOfRange
  67  0.42% 74.31%   10000 304129 java.nio.CharBuffer.toString
  68  0.41% 74.72%   58642 304058 java.nio.Buffer.position
  69  0.41% 75.13%   10000 304111 java.util.regex.Matcher.group
  70  0.41% 75.54%   10000 304115 java.nio.CharBuffer.toString
  71  0.40% 75.94%   58642 304063 java.util.regex.Pattern$Node.match
  72  0.39% 76.34%   20974 304187 BinaryHeapPriorityQueue.top
  73  0.39% 76.72%   22947 304164 BinaryHeapPriorityQueue.comp
  74  0.38% 77.10%   20000 304109 java.nio.HeapCharBuffer.toString
  75  0.37% 77.47%   58654 300955 java.lang.CharacterData.of
  76  0.37% 77.84%   22947 304162 java.lang.Integer.compareTo
  77  0.36% 78.20%   19991 304040 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
  78  0.36% 78.56%   58642 304062 java.util.regex.Pattern$BitClass.isSatisfiedBy
  79  0.36% 78.92%    1954 304220 sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
  80  0.34% 79.26%   10000 304066 java.util.regex.Pattern$BmpCharProperty.match
  81  0.34% 79.60%   10000 304120 java.util.Scanner.cacheResult
  82  0.33% 79.94%   20000 304104 java.nio.HeapCharBuffer.subSequence
  83  0.33% 80.27%   10000 304130 java.util.regex.Matcher.group
  84  0.33% 80.60%   10000 304082 java.util.regex.Pattern$Curly.match
  85  0.33% 80.93%   10008 304157 java.util.regex.Pattern$CharProperty.match
  86  0.31% 81.24%   10000 304041 java.util.regex.Pattern$CharProperty.match
  87  0.30% 81.54%   30000 304099 java.nio.Buffer.position
  88  0.30% 81.84%   10000 304116 java.util.regex.Matcher.group
  89  0.29% 82.13%   10009 304024 java.lang.Character.codePointAt
  90  0.29% 82.42%   10000 304057 java.util.regex.Pattern$BmpCharProperty.match
  91  0.29% 82.72%   30000 304098 java.nio.Buffer.limit
  92  0.29% 83.01%   10000 304110 java.nio.CharBuffer.toString
  93  0.28% 83.29%   10010 303988 java.util.regex.Pattern$Curly.match
  94  0.27% 83.56%   30000 304047 java.util.regex.Matcher.end
  95  0.27% 83.82%   10000 304054 java.nio.HeapCharBuffer.get
  96  0.27% 84.09%   10000 304055 java.nio.CharBuffer.charAt
  97  0.27% 84.36%   10000 304092 java.util.regex.Matcher.matches
  98  0.27% 84.63%   10008 304159 java.util.regex.Pattern$Curly.match0
  99  0.26% 84.89%   30000 304096 java.nio.Buffer.position
 100  0.25% 85.14%   10000 304149 java.util.Scanner.nextInt
 101  0.25% 85.39%   22954 304153 BinaryHeapPriorityQueue.getParent
 102  0.24% 85.63%   10000 304075 java.util.regex.Pattern$GroupTail.match
 103  0.24% 85.87%   10000 304128 java.nio.HeapCharBuffer.toString
 104  0.23% 86.11%   30132 303979 java.nio.Buffer.limit
 105  0.23% 86.34%   10010 303990 java.util.regex.Matcher.lookingAt
 106  0.22% 86.55%   10010 303989 java.util.regex.Matcher.match
 107  0.22% 86.77%   10000 304078 java.util.regex.Pattern$GroupTail.match
 108  0.22% 86.99%    9951 304166 java.lang.Integer.<init>
 109  0.21% 87.20%   30071 302129 java.nio.Buffer.remaining
 110  0.21% 87.41%   10000 304085 java.util.regex.Pattern$GroupHead.match
 111  0.21% 87.62%   10000 304086 java.util.regex.Pattern$GroupHead.match
 112  0.21% 87.83%   10000 304124 java.nio.HeapCharBuffer.subSequence
 113  0.20% 88.03%   10000 304087 java.util.regex.Pattern$Ques.match
 114  0.19% 88.22%   10000 304043 java.util.regex.Pattern$Curly.match0
 115  0.19% 88.41%   10000 304084 java.util.regex.Pattern$Branch.match
 116  0.19% 88.60%   10000 304090 java.util.regex.Pattern$Branch.match
 117  0.18% 88.79%   10000 304079 java.util.regex.Pattern$BranchConn.match
 118  0.18% 88.97%   10000 304105 java.util.regex.Matcher.getSubSequence
 119  0.18% 89.15%   10060 304045 java.util.regex.Matcher.search
 120  0.18% 89.32%   10000 304076 java.util.regex.Pattern$GroupTail.match
 121  0.18% 89.50%   30000 304097 java.nio.Buffer.capacity
 122  0.18% 89.68%   20000 304106 java.nio.Buffer.position
 123  0.18% 89.85%    1954 304246 sun.nio.cs.StreamEncoder.writeBytes
 124  0.17% 90.02%   20070 303978 java.util.regex.Matcher.usePattern
 125  0.17% 90.19%   10000 304088 java.util.regex.Pattern$GroupHead.match
 126  0.17% 90.35%   10000 304091 java.util.regex.Matcher.match
 127  0.17% 90.52%   10001 304146 java.util.Scanner.hasNextInt
 128  0.17% 90.69%   10000 304150 java.util.Scanner.nextInt
 129  0.17% 90.86%   10000 304151 java.lang.Integer.valueOf
 130  0.16% 91.02%   10000 304125 java.util.regex.Matcher.getSubSequence
 131  0.16% 91.17%   10000 304144 java.lang.Integer.valueOf
 132  0.15% 91.33%   10000 304074 java.util.regex.Pattern$BranchConn.match
 133  0.15% 91.48%   10000 304114 java.util.regex.Matcher.getSubSequence
 134  0.15% 91.63%    9951 304168 java.lang.Integer.<init>
 135  0.14% 91.77%   10009 304029 java.util.regex.Pattern$CharPropertyNames$21.isSatisfiedBy
 136  0.14% 91.91%   10000 304083 java.util.regex.Pattern$GroupHead.match
 137  0.14% 92.05%   20974 304186 BinaryHeapPriorityQueue.empty
 138  0.14% 92.20%    1954 304219 sun.nio.cs.UTF_8.updatePositions
 139  0.13% 92.33%   10060 304046 java.util.regex.Matcher.find
 140  0.13% 92.46%   10000 304067 java.util.regex.Pattern$Branch.match
 141  0.13% 92.60%   10000 304068 java.util.regex.Pattern$GroupHead.match
 142  0.13% 92.73%   10000 304080 java.util.regex.Pattern$GroupTail.match
 143  0.13% 92.87%   30000 304094 java.nio.Buffer.remaining
 144  0.13% 93.00%   10000 304117 java.util.regex.Matcher.group
 145  0.13% 93.13%   19999 304188 java.lang.Integer.intValue
 146  0.13% 93.26%   10000 304077 java.util.regex.Pattern$GroupTail.match
 147  0.12% 93.38%   10000 304152 BinaryHeapPriorityQueue.ensureNotNull
 148  0.11% 93.49%   10001 303975 java.util.Scanner.ensureOpen
 149  0.11% 93.59%   10000 304089 java.util.regex.Pattern$GroupHead.match
 150  0.11% 93.70%   10000 304112 java.util.regex.Matcher.group
 151  0.11% 93.81%   10000 304118 java.util.regex.Matcher.end
 152  0.11% 93.92%   10000 304148 java.util.Scanner.useTypeCache
 153  0.10% 94.02%   20000 304107 java.nio.Buffer.limit
 154  0.10% 94.12%   10001 304121 java.util.Scanner.revertState
 155  0.10% 94.22%   10008 304155 java.lang.Character.charCount
 156  0.09% 94.31%   10001 303788 java.util.Scanner.setRadix
 157  0.09% 94.41%   19991 304037 java.lang.Character.isHighSurrogate
 158  0.09% 94.50%   10000 304127 java.nio.Buffer.limit
 159  0.09% 94.59%   10000 304131 java.lang.String.length
 160  0.09% 94.68%   10008 304156 java.util.regex.Pattern$Node.match
 161  0.09% 94.78%    1954 304224 java.nio.charset.CharsetEncoder.encode
 162  0.08% 94.86%   10001 303976 java.util.Scanner.saveState
 163  0.08% 94.94%   10000 304035 java.util.regex.Pattern$Node.match
 164  0.08% 95.03%   10000 304073 java.util.regex.Pattern$LastNode.match
 165  0.08% 95.11%   10000 304113 java.util.regex.Matcher.groupCount
 166  0.08% 95.19%   10000 304119 java.util.regex.Matcher.pattern
 167  0.08% 95.28%   10008 304158 java.util.regex.Pattern$LastNode.match
 168  0.08% 95.36%    1954 304227 sun.nio.cs.StreamEncoder.implWrite
 169  0.08% 95.44%   10000 304049 java.util.regex.Matcher.start
 170  0.08% 95.51%   10000 304070 java.util.regex.Pattern$CharProperty.match
 171  0.08% 95.59%    1954 304241 java.io.BufferedOutputStream.flushBuffer
 172  0.08% 95.66%   10000 304275 BinaryHeapPriorityQueue.empty
 173  0.08% 95.74%     975 304301 java.io.PrintStream.write
 174  0.07% 95.81%   10000 304048 java.util.regex.Matcher.requireEnd
 175  0.07% 95.87%   10000 304051 java.nio.Buffer.checkIndex
 176  0.07% 95.94%   10000 304056 java.util.regex.Pattern$BitClass.isSatisfiedBy
 177  0.07% 96.01%   10008 304160 java.util.regex.Matcher.hitEnd
 178  0.07% 96.07%    1954 304221 sun.nio.cs.UTF_8$Encoder.encodeLoop
 179  0.07% 96.14%    1954 304244 java.io.PrintStream.write
 180  0.07% 96.21%     975 304287 java.lang.Integer.toString
 181  0.07% 96.27%     975 304314 java.io.PrintStream.newLine
 182  0.06% 96.33%    9444 300994 java.lang.Math.min
 183  0.06% 96.39%     896 303506 java.io.DataInputStream.readInt
 184  0.06% 96.45%   10000 304126 java.nio.Buffer.position
 185  0.06% 96.51%    9951 304167 java.lang.Number.<init>
 186  0.06% 96.57%     977 304228 sun.nio.cs.StreamEncoder.write
 187  0.05% 96.62%    2025 302572 java.nio.Buffer.<init>
 188  0.05% 96.67%   10000 304034 java.lang.Character.charCount
 189  0.05% 96.72%   10000 304042 java.util.regex.Pattern$LastNode.match
 190  0.05% 96.77%   10000 304123 java.util.regex.Matcher.groupCount
 191  0.05% 96.82%   10001 304185 BinaryHeapPriorityQueue.empty
 192  0.04% 96.86%    3584 303504 java.io.BufferedInputStream.getBufIfOpen
 193  0.04% 96.90%   10001 303974 java.util.Scanner.integerPattern
 194  0.04% 96.94%   10000 304093 java.util.regex.Matcher.groupCount
 195  0.04% 96.99%   10000 304147 java.lang.Integer.intValue
 196  0.04% 97.03%    9951 304165 java.lang.Number.<init>
 197  0.04% 97.07%    1954 304204 java.nio.HeapCharBuffer.<init>
 198  0.04% 97.11%    1954 304209 java.nio.CharBuffer.array
 199  0.04% 97.15%    1954 304238 java.io.PrintStream.ensureOpen
 200  0.04% 97.20%    1954 304243 java.io.BufferedOutputStream.flush
 201  0.04% 97.24%     977 304263 sun.nio.cs.StreamEncoder.write
 202  0.04% 97.28%     977 304267 sun.nio.cs.StreamEncoder.implFlushBuffer
 203  0.04% 97.32%     975 304289 java.lang.String.valueOf
 204  0.04% 97.36%     975 304292 java.io.BufferedWriter.write
 205  0.04% 97.40%     975 304298 java.io.OutputStreamWriter.flushBuffer
 206  0.04% 97.45%     975 304302 java.io.PrintStream.print
 207  0.03% 97.48%    3584 303505 java.io.BufferedInputStream.read
 208  0.03% 97.51%   10000 304050 java.nio.Buffer.position
 209  0.03% 97.55%    1954 304203 java.nio.CharBuffer.<init>
 210  0.03% 97.58%    1954 304207 java.nio.CharBuffer.hasArray
 211  0.03% 97.61%    1954 304215 java.lang.Math.min
 212  0.03% 97.65%    1954 304225 java.nio.charset.CoderResult.isUnderflow
 213  0.03% 97.68%    1954 304240 java.io.FileOutputStream.write
 214  0.03% 97.71%     975 304300 java.lang.String.indexOf
 215  0.03% 97.75%     975 304308 java.io.BufferedWriter.flushBuffer
 216  0.03% 97.78%     975 304309 sun.nio.cs.StreamEncoder.flushBuffer
 217  0.03% 97.81%      20 300128 java.lang.ClassLoader.findBootstrapClassOrNull
 218  0.03% 97.83%       9 300561 java.util.zip.ZipFile.<init>
 219  0.03% 97.86%     757 301769 java.lang.Character.codePointAtImpl
 220  0.03% 97.88%      10 304002 java.io.FileInputStream.read
 221  0.03% 97.91%     977 304196 java.io.BufferedWriter.ensureOpen
 222  0.03% 97.93%     977 304197 java.io.BufferedWriter.min
 223  0.03% 97.96%    1954 304205 java.nio.CharBuffer.wrap
 224  0.03% 97.98%    1954 304206 java.nio.Buffer.hasRemaining
 225  0.03% 98.01%    1954 304208 java.nio.ByteBuffer.hasArray
 226  0.03% 98.03%    3908 304211 java.nio.Buffer.position
 227  0.03% 98.06%    1954 304222 java.nio.charset.CoderResult.isOverflow
 228  0.03% 98.08%    1954 304234 java.nio.Buffer.limit
 229  0.03% 98.11%    1954 304239 java.io.BufferedOutputStream.write
 230  0.03% 98.13%    1954 304242 java.io.OutputStream.flush
 231  0.03% 98.16%    1954 304245 java.nio.Buffer.clear
 232  0.03% 98.18%     977 304247 sun.nio.cs.StreamEncoder.implFlushBuffer
 233  0.03% 98.21%     975 304305 java.io.BufferedWriter.newLine
 234  0.03% 98.23%     975 304313 java.io.BufferedOutputStream.flush
 235  0.02% 98.25%      19 300287 java.io.UnixFileSystem.normalize
 236  0.02% 98.27%      14 300321 java.io.UnixFileSystem.normalize
 237  0.02% 98.28%      52 300813 java.util.zip.ZipFile.getEntry
 238  0.02% 98.30%     757 301772 java.util.regex.Pattern.isSupplementary
 239  0.02% 98.32%       4 301774 java.util.regex.Pattern.RemoveQEQuoting
 240  0.02% 98.33%       1 301959 java.util.regex.Pattern$CharPropertyNames.<clinit>
 241  0.02% 98.35%     376 302032 java.util.regex.Pattern.has
 242  0.02% 98.37%     368 302033 java.util.regex.Pattern.peek
 243  0.02% 98.38%       1 302093 java.util.Scanner.<clinit>
 244  0.02% 98.40%      11 302441 java.io.UnixFileSystem.normalize
 245  0.02% 98.42%    2025 302571 java.nio.Buffer.position
 246  0.02% 98.43%      71 302575 java.nio.CharBuffer.wrap
 247  0.02% 98.45%      81 302579 sun.nio.cs.UTF_8$Decoder.decodeArrayLoop
 248  0.02% 98.47%       2 302646 sun.misc.MetaIndex.registerDirectory
 249  0.02% 98.48%       7 303507 java.util.Currency.readIntArray
 250  0.02% 98.50%       1 303752 java.text.NumberFormat.getInstance
 251  0.02% 98.52%       1 303967 java.util.regex.Pattern.compile
 252  0.02% 98.53%       1 304143 java.lang.Integer$IntegerCache.<clinit>
 253  0.02% 98.55%       9 304184 java.io.BufferedInputStream.available
 254  0.02% 98.57%    3908 304210 java.nio.CharBuffer.arrayOffset
 255  0.02% 98.58%    1954 304213 java.nio.ByteBuffer.array
 256  0.02% 98.60%    3908 304214 java.nio.ByteBuffer.arrayOffset
 257  0.02% 98.62%    1954 304233 java.nio.Buffer.flip
 258  0.02% 98.64%    1954 304236 java.nio.ByteBuffer.array
 259  0.02% 98.65%     977 304259 java.io.BufferedWriter.write
 260  0.02% 98.67%     975 304284 java.lang.Integer.stringSize
 261  0.02% 98.69%     975 304285 java.lang.Integer.getChars
 262  0.02% 98.70%     975 304295 java.io.OutputStreamWriter.write
 263  0.02% 98.72%     975 304304 java.io.Writer.write
 264  0.02% 98.74%     975 304307 java.io.OutputStreamWriter.write
 265  0.02% 98.75%     975 304310 java.io.OutputStreamWriter.flushBuffer
 266  0.02% 98.77%     975 304315 java.io.PrintStream.println
CPU TIME (ms) END
